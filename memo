    latitude = params[:latitude]
    longitude = params[:longitude]

    base_url = "http://webservice.recruit.co.jp/hotpepper/gourmet/v1/"
    params = {
      'key' => '49d0fceee63728bd',
      'lat' => "#{latitude}",
      'lng' => "#{longitude}",
      'range' => 1,
      'count' => 5,
      'format' => 'json'
    }
    
    uri = URI.parse(base_url)
    uri.query = URI.encode_www_form(params)
    
    
    response = Net::HTTP.get_response(uri)
    if response.code == '301'
      # リダイレクト先のURLを取得
      new_location = response['Location']
      
      # 新しいURLにリクエストを送信
      new_uri = URI.parse(new_location)
      new_response = Net::HTTP.get_response(new_uri)
      if new_response.code == '200'
        # レスポンスを解析
        result = JSON.parse(new_response.body)
        # 結果を利用する処理を追加
      else
        # リクエストが成功しなかった場合の処理
        puts "Error: #{new_response.code} - #{new_response.body}"
      end
    else
      # 301以外のステータスコードの処理
      # ...
    end

    @shop_name = result['results']['shop'].map { |shop| shop['name'] }

    // Ajaxリクエストを送信します
    // fetch('/maps', {
    //   method: 'POST',
    //   headers: {
    //     'Content-Type': 'application/json'
    //   },
    //   body: JSON.stringify({
    //     latitude: latitude,
    //     longitude: longitude,
    //     authenticity_token: document.querySelector("meta[name='csrf-token']").getAttribute("content")
    //   })
    // })

     // Ajaxリクエストを送信します
    // fetch('/maps/index', {
    //   method: 'POST',
    //   headers: {
    //     'Content-Type': 'application/json'
    //   },
    //   body: JSON.stringify({
    //     latitude: latitude,
    //     longitude: longitude,
    //     authenticity_token: document.querySelector("meta[name='csrf-token']").getAttribute("content")
    //   })
    // })



if (data.results && data.results.shop.length === []) {
  let shopHTML = '近くに飲食店が見つかりませんでした';
  shopList.innerHTML = shopHTML;
else if (data.results && data.results.shop && Array.isArray(data.results.shop)) {
  const shops = data.results.shop;
  let shopHTML = '';
  shops.forEach(shop => {
    const shopName = shop.name;
    const shopAddress = shop.address;
    const shopLogoimage = shop.logo_image;
    const shopUrl = shop.urls.pc;
    const shopGenre = shop.genre.name
    shopHTML += `<li>ジャンル${shopGenre}</li>`;
    shopHTML += `<li><a href="${shopUrl}">${shopName}</a></li>`;
    shopHTML += `<li>アクセス${shopAddress}</li>`;
    shopHTML += `<li><image src =${shopLogoimage} ></li>`;
  });
  shopList.innerHTML = shopHTML;